name: CI â€” build & lint flake, dry-run on push, full buld on schedule

on:
  push:
  pull_request:
  schedule:
    - cron: "30 2 * * 5" # nightly full build at 02:30 UTC
  workflow_dispatch:

permissions:
  contents: read

jobs:
  lint-and-dry-run:
    if: ${{ github.event_name != 'schedule' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Show Nix version
        run: nix --version

      - name: Check formatting (treefmt)
        run: nix develop -c treefmt --ci

      - name: Statix lints
        run: nix run nixpkgs#statix -- check .

      - name: Deadnix (dead code)
        run: nix run nixpkgs#deadnix -- .

      - name: Flake checks
        run: nix flake check --all-systems

      - name: Dry-run each host (no downloads)
        shell: bash
        run: |
          set -euo pipefail
          hosts=$(nix eval --json .#nixosConfigurations --apply 'builtins.attrNames' | jq -r '.[]')
          total_start=$(date +%s)
          for h in $hosts; do
            echo "::group::Dry-run $h"
            start=$(date +%s)
            nix build --dry-run ".#nixosConfigurations.${h}.config.system.build.toplevel"
            end=$(date +%s)
            echo "Dry-run $h: $((end - start))s"
            echo "::endgroup::"
          done
          total_end=$(date +%s)
          echo "Dry-run total: $((total_end - total_start))s"

  weekly-full-build:
    if: ${{ github.event_name == 'schedule' }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Free disk space on runner
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/hostedtoolcache/CodeQL || true
          docker system prune -af || true
          df -h

      - name: Evaluate flake (list hosts)
        run: nix eval --json .#nixosConfigurations --apply 'builtins.attrNames'

      - name: Build all hosts (sequential, timed, --no-link, GC between)
        shell: bash
        run: |
          set -euo pipefail
          hosts=$(nix eval --json .#nixosConfigurations --apply 'builtins.attrNames' | jq -r '.[]' || true)
          total_start=$(date +%s)
          for h in $hosts; do
            echo "::group::Build $h"
            start=$(date +%s)
            nix build --no-link ".#nixosConfigurations.${h}.config.system.build.toplevel"
            end=$(date +%s)
            echo "Build $h: $((end - start))s"
            # GC to keep disk pressure low
            (nix store gc || nix-collect-garbage -d) || true
            df -h
            echo "::endgroup::"
          done
          total_end=$(date +%s)
          echo "Full build total: $((total_end - total_start))s"
