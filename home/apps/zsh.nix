{
  config,
  lib,
  pkgs,
  ...
}: let
  themeEnvPath = "$XDG_CONFIG_HOME/theme/env";
  themeEnvFallback = "$HOME/.config/theme/env";
in {
  # We don't enable programs.zsh here (NixOS owns it).
  # We only provide the files zsh will read via ZDOTDIR.

  xdg.configFile = {
    "zsh/.zshrc".text = ''
      # --- Theme tokens from hm.theme (tokens.nix) ---
      if [ -f ${themeEnvPath} ]; then
        source ${themeEnvPath}
      elif [ -f ${themeEnvFallback} ]; then
        source ${themeEnvFallback}
      fi

      # truecolor + allow variable expansion in prompts
      export COLORTERM=truecolor
      setopt PROMPT_SUBST

      # --- Safe fallbacks if THEME_* are not yet present ---
      : ''${THEME_ACCENT1:='#d65d0e'}
      : ''${THEME_PRIMARY:='#458588'}
      : ''${THEME_MUTED:='#bdae93'}
      : ''${THEME_FG:='#ebdbb2'}
      : ''${THEME_SUCCESS:='#98971a'}
      : ''${THEME_WARNING:='#d79921'}
      : ''${THEME_ERROR:='#cc241d'}

      # --- Helper: git branch (fast/quiet) ---
      __theme_git_branch() {
        command git rev-parse --is-inside-work-tree >/dev/null 2>&1 || return
        command git branch --show-current 2>/dev/null
      }

      # --- Prompt (after oh-my-zsh initialized from /etc/zshrc) ---
      # Left: user@host path
      PROMPT='%F{'$THEME_ACCENT1'}%n%f@%F{'$THEME_PRIMARY'}%m%f %F{'$THEME_MUTED'}%~%f %# '

      # Right: current git branch (green)
      RPROMPT='%F{'$THEME_SUCCESS'}$(__theme_git_branch)%f'

      # If you want a dirty marker, use this instead:
      # RPROMPT='%F{'$THEME_SUCCESS'}$(__theme_git_branch)%f%F{'$THEME_WARNING'}$(git diff --quiet 2>/dev/null || echo "*")%f'
    '';

    "zsh/README-theme.txt".text = ''
      This zsh reads theme colors from ~/.config/theme/env (generated by hm.theme).
      Colors: THEME_BG/FG/MUTED/BORDER/PRIMARY/SECONDARY/SUCCESS/WARNING/ERROR/HINT/ACCENT1/2/3
      Prompt uses zsh truecolor via %F{#rrggbb} and overrides any oh-my-zsh theme.
    '';
  };
}
